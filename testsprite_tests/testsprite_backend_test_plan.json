[
  {
    "id": "TC001",
    "title": "validate_structured_task_yaml_files",
    "description": "Test the validation of all structured task YAML files against the task-schema.json to ensure compliance with the defined schema and detect any format errors."
  },
  {
    "id": "TC002",
    "title": "validate_structured_checklist_yaml_files",
    "description": "Test the validation of all structured checklist YAML files against the checklist-schema.json to ensure they conform to the required schema format without errors."
  },
  {
    "id": "TC003",
    "title": "initialize_working_memory_files_creation",
    "description": "Verify that the working memory initialization process creates the expected JSON files in the .ai/ directory and that these files correctly represent the session context."
  },
  {
    "id": "TC004",
    "title": "ingest_search_results_into_qdrant_database",
    "description": "Test the ingestion of search results into the Qdrant vector database to confirm that data is correctly stored for long-term memory and can be retrieved accurately."
  },
  {
    "id": "TC005",
    "title": "generate_search_tools_from_prd_content",
    "description": "Validate the generation of search tools from PRD content using keyword extraction, ensuring the output search-tools.yaml file is correctly created and contains relevant mappings."
  },
  {
    "id": "TC006",
    "title": "validate_generated_search_tool_configurations",
    "description": "Test the validation process for generated search tool configurations to ensure they meet schema requirements and contain no errors."
  },
  {
    "id": "TC007",
    "title": "validate_story_contracts_with_json_schema",
    "description": "Verify that story contracts are validated against the story-contract-schema.json, ensuring all required fields are present and the contracts are correctly formatted."
  },
  {
    "id": "TC008",
    "title": "orchestrate_dev_qa_workflow_execution",
    "description": "Test the workflow orchestrator's ability to manage Dev-QA workflows with both linear and iterative flow types, verifying correct execution and logging."
  },
  {
    "id": "TC009",
    "title": "build_agent_bundles_and_resolve_dependencies",
    "description": "Verify that the agent building process correctly creates agent bundles in the dist/agents/ directory and resolves all dependencies without errors."
  },
  {
    "id": "TC010",
    "title": "analyze_code_dependencies_and_store_in_qdrant",
    "description": "Test the dependency analysis script to ensure it accurately analyzes code dependencies and stores the resulting graph in the Qdrant vector database."
  }
]

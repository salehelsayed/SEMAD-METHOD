{
  "name": "bmad-method",
  "version": "4.31.0",
  "description": "Breakthrough Method of Agile AI-driven Development",
  "main": "tools/cli.js",
  "bin": {
    "bmad": "tools/bmad-npx-wrapper.js",
    "bmad-method": "tools/bmad-npx-wrapper.js",
    "bmad-orchestrator": "tools/workflow-orchestrator.js"
  },
  "scripts": {
    "dep:report": "node scripts/generate-dep-report.js",
    "reverse:manifest": "node tools/workflow-orchestrator.js refresh-manifest",
    "reverse:align:max": "node tools/reverse-align-max.js",
    "reverse:shard": "bmad-orchestrator po-shard-docs",
    "reverse:align": "bmad-orchestrator reverse-align",
    "reverse:gate": "node tools/workflow-orchestrator.js quality-gate --coverage 0.85 --delta-only",
    "reverse:stories": "node tools/workflow-orchestrator.js generate-stories --cap 10",
    "reverse:normalize": "node tools/workflow-orchestrator.js normalize-stories",
    "reverse:validate": "node scripts/validate-golden.js",
    "build": "node tools/cli.js build",
    "build:agents": "node tools/cli.js build --agents-only",
    "build:teams": "node tools/cli.js build --teams-only",
    "list:agents": "node tools/cli.js list:agents",
    "validate": "node tools/cli.js validate",
    "validate:schemas": "node scripts/validate-schemas.js",
    "validate:all": "node scripts/validate-all.js",
    "validate:tasks": "node scripts/validate-all.js --tasks-only",
    "validate:structured-tasks": "node scripts/validate-all.js --structured-tasks-only",
    "validate:checklists": "node scripts/validate-all.js --checklists-only",
    "validate:story": "node bmad-core/scripts/validate-story-contract.js",
    "validate:contracts": "node scripts/validate-story-contract.js --all",
    "validate:epic": "node scripts/validate-epic-contract.js --file",
    "validate:workflows": "node bmad-core/utils/workflow-validator.js",
    "validate:config": "node tools/validate-config.js",
    "check:elicitation": "node scripts/audit-elicit-flags.js",
    "scan:tasks": "node tools/scan-structured-tasks.js",
    "install:bmad": "node tools/installer/bin/bmad.js install",
    "format": "prettier --write \"**/*.md\"",
    "test": "jest --config jest.config.js --maxWorkers=75%",
    "test:ci": "jest --config jest.config.js --maxWorkers=50%",
    "test:local": "jest --config jest.config.js --maxWorkers=75%",
    "test:watch": "jest --watch",
    "test:cli": "node testsprite_tests/run-cli-tests.js",
    "dev:tests:quality": "node tools/qa/test-quality-gate.js",
    "dev:tests:quality:story": "node tools/qa/run-test-quality.js --story",
    "dev:tests:preflight": "npm run preflight:tests",
    "init:memory": "node bmad-core/scripts/init-memory.js",
    "generate:search-tools": "node scripts/generate-search-tools.js",
    "ingest:search-results": "node scripts/ingest-to-qdrant.js",
    "validate:search-tools": "node scripts/validate-search-tools.js",
    "version:patch": "node tools/version-bump.js patch",
    "version:minor": "node tools/version-bump.js minor",
    "version:major": "node tools/version-bump.js major",
    "version:expansion": "node tools/bump-expansion-version.js",
    "version:expansion:set": "node tools/update-expansion-version.js",
    "version:all": "node tools/bump-all-versions.js",
    "version:all:minor": "node tools/bump-all-versions.js minor",
    "version:all:major": "node tools/bump-all-versions.js major",
    "version:all:patch": "node tools/bump-all-versions.js patch",
    "version:expansion:all": "node tools/bump-all-versions.js",
    "version:expansion:all:minor": "node tools/bump-all-versions.js minor",
    "version:expansion:all:major": "node tools/bump-all-versions.js major",
    "version:expansion:all:patch": "node tools/bump-all-versions.js patch",
    "orchestrate": "node tools/workflow-orchestrator.js run --non-interactive",
    "orchestrate:status": "node tools/workflow-orchestrator.js status",
    "orchestrate:greenfield": "node tools/workflow-orchestrator.js run --non-interactive --mode=greenfield",
    "orchestrate:path-resolve": "node tools/test-path-resolution.js",
    "devqa:loop": "bash tools/flows/dev-qa-iterative.sh",
    "devqa:loop:codex": "bash tools/flows/dev-qa-codex-loop.sh",
    "devqa:loop:strict": "BMAD_NONINTERACTIVE=1 bash tools/flows/dev-qa-iterative.sh",
    "qa:verify-fixes": "node bmad-core/utils/verify-qa-fixes.js",
    "dev:next-story": "node tools/dev-next-story.js",
    "qa:review": "node tools/qa-review.js",
    "generate:story": "node tools/generate-story.js --non-interactive --title 'Test Story' --description 'Test Description' --priority Medium --status Draft",
    "test:memory-persistence": "node tools/test-memory-persistence.js",
    "interact:analysis": "node tools/interaction-analysis.js",
    "memory:update-tasks": "node scripts/update-tasks-with-memory.js",
    "memory:test": "npm test tests/unified-memory-manager.test.js tests/agent-runner.test.js",
    "memory:test:integration": "npm test tests/integration/memory-integration.test.js",
    "release": "semantic-release",
    "release:test": "semantic-release --dry-run --no-ci || echo 'Config test complete - authentication errors are expected locally'",
    "prepare": "husky",
    "examples:run": "node scripts/examples/run-examples.js",
    "schema:check": "node scripts/schema-check.js",
    "context:bundle": "node tools/context/build-task-bundle.js",
    "context:index": "node tools/context/index-artifacts.js",
    "preflight:schema": "node scripts/preflight/schema-check.js",
    "preflight:contract": "node scripts/preflight/contract-check.js",
    "preflight:grounding": "node scripts/preflight/grounding-check.js",
    "preflight:lint": "bash scripts/preflight/lint-check.sh",
    "preflight:type": "bash scripts/preflight/type-check.sh",
    "preflight:build": "bash scripts/preflight/build-check.sh",
    "preflight:all": "npm run preflight:schema && npm run preflight:contract && npm run preflight:lint && npm run preflight:type && npm run preflight:build && node scripts/preflight/run-reference-check.js && node scripts/preflight/run-patch-plan-validation.js",
    "patch-plan:validate": "node scripts/preflight/run-patch-plan-validation.js",
    "reference:check": "node scripts/preflight/run-reference-check.js",
    "traceability:check": "node tools/traceability/test-naming-check.js",
    "test:quality": "node tools/qa/test-quality-gate.js",
    "preflight:tests": "npm run traceability:check && npm run test:quality",
    "context:retrieve": "node tools/context/retrieve-context.js",
    "gate:planning": "node tools/orchestrator/gates/planning-gate.js",
    "gate:dev": "node tools/orchestrator/gates/dev-gate.js",
    "gate:qa": "node tools/orchestrator/gates/qa-gate.js",
    "gates:all": "node tools/orchestrator/gates/index.js all",
    "gates:status": "node tools/orchestrator/gates/index.js status",
    "gates:next": "node tools/orchestrator/gates/index.js next",
    "gates:reset": "node tools/orchestrator/gates/index.js reset",
    "rollback": "node tools/orchestrator/rollback.js execute",
    "rollback:list": "node tools/orchestrator/rollback.js list",
    "rollback:status": "node tools/orchestrator/rollback.js status",
    "snapshot:create": "node tools/orchestrator/snapshots.js create",
    "snapshot:list": "node tools/orchestrator/snapshots.js list",
    "drift:detect": "node tools/orchestrator/drift-alarms.js detect",
    "drift:list": "node tools/orchestrator/drift-alarms.js list",
    "metrics:collect": "node tools/metrics/collect.js",
    "verify:impact": "npx dependency-cruiser -c .dependency-cruiser.js --ts-pre-compilation-deps=false --output-type json tools scripts bmad-core > .ai/reports/impact-map.json",
    "verify:unused": "npx knip --reporter json > .ai/reports/cleanup-report.json || true",
    "guard:run": "node tools/dev-guard.js --impact-scan --cleanup --report"
  },
  "dependencies": {
    "@kayvan/markdown-tree-parser": "^1.5.0",
    "@qdrant/js-client-rest": "^1.15.0",
    "ajv": "^8.12.0",
    "ajv-formats": "^2.1.1",
    "bmad-method": "^4.30.3",
    "chalk": "^4.1.2",
    "chokidar": "^4.0.3",
    "commander": "^14.0.0",
    "fs-extra": "^11.3.0",
    "glob": "^11.0.3",
    "inquirer": "^8.2.6",
    "js-yaml": "^4.1.0",
    "openai": "^4.73.1",
    "ora": "^5.4.1",
    "undici": "^7.13.0"
  },
  "keywords": [
    "agile",
    "ai",
    "orchestrator",
    "development",
    "methodology",
    "agents",
    "bmad"
  ],
  "author": "Brian (BMad) Madison",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bmadcode/BMAD-METHOD.git"
  },
  "engines": {
    "node": ">=20.0.0"
  },
  "devDependencies": {
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "husky": "^9.1.7",
    "jest": "^30.0.5",
    "lint-staged": "^16.1.1",
    "prettier": "^3.5.3",
    "semantic-release": "^22.0.0",
    "yaml-lint": "^1.7.0"
  },
  "lint-staged": {
    "**/*.md": [
      "prettier --write"
    ]
  }
}

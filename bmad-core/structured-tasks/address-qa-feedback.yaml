id: address-qa-feedback
name: address-qa-feedback
purpose: Address QA feedback using structured tracking to ensure all items are systematically fixed
steps:
  - id: step0
    name: Parse QA Findings
    description: Parse QA Results into structured format for tracking
    actions:
      - description: Read the story file and extract QA Results section
        elicit: false
      - description: Use qa-findings-parser to parse findings into structured JSON
        elicit: false
      - description: Save parsed findings to .ai/qa_findings.json
        elicit: false
      - description: Initialize QAFixTracker with parsed findings
        elicit: false
  
  - id: step1
    name: Create Fix Checklist
    description: Convert QA findings into trackable fix checklist
    actions:
      - description: Generate .ai/qa_fixes_checklist.json with all items to fix
        elicit: false
      - description: Display summary of fixes needed by category (critical, major, minor, checklist)
        elicit: false
      - description: Log fix tracking initialization using track-progress.js
        elicit: false

  - id: step1a
    name: Analyze Dependency Impacts
    description: Run dependency impact analysis for files affected by QA fixes before applying changes
    actions:
      - description: Aggregate affected files from QA findings and StoryContract.filesToModify
        elicit: false
      - description: Use dependency-impact-checker to analyze impacts for the aggregated file list (bounded concurrency; suggested maxParallel=4)
        elicit: false
      - description: Save detailed analysis to .ai/dependency_analysis_qa.json and a markdown summary to .ai/dependency_impact_report_qa.md
        elicit: false
      - description: If high-risk impacts detected (>10 impacted symbols or critical system files), prompt to continue or pause
        elicit: false
        format: "High-risk dependency impact detected. Continue with fixes? (yes/no)"
      - description: Log dependency analysis completion using track-progress.js
        elicit: false

  - id: step2
    name: Address Critical Issues
    description: Fix all critical issues identified by QA with tracking
    actions:
      - description: Get list of critical issues from QAFixTracker
        elicit: false
      - description: For each critical issue, read the affected file
        elicit: false
      - description: Implement the recommended fix following QA's specific guidance
        elicit: false
      - description: Mark fix as completed in tracker with verification details
        elicit: false
      - description: Update the story's Debug Log with details of each fix
        elicit: false
      - description: Prefer bounded concurrency for independent fixes (group by file and run up to 3 in parallel); serialize dependent changes in the same file
        elicit: false

  - id: step3
    name: Address Major Issues
    description: Fix all major issues with systematic tracking
    actions:
      - description: Get list of major issues from QAFixTracker
        elicit: false
      - description: Implement fixes for each major issue (run independent fixes concurrently up to 3 workers)
        elicit: false
      - description: Mark each fix as completed in tracker
        elicit: false
      - description: Verify fixes don't break existing functionality
        elicit: false

  - id: step4
    name: Implement Checklist Items
    description: Complete all improvement checklist items
    actions:
      - description: Get uncompleted checklist items from tracker
        elicit: false
      - description: Implement each checklist item (refactoring, tests, etc.) with bounded concurrency when item scopes are disjoint
        elicit: false
      - description: Mark each item as completed with verification
        elicit: false
      - description: Document changes in story's Change Log
        elicit: false

  - id: step5
    name: Address Minor Issues
    description: Fix minor issues and improvements
    actions:
      - description: Get list of minor issues from tracker
        elicit: false
      - description: Apply fixes for code quality improvements
        elicit: false
      - description: Mark each fix as completed in tracker
        elicit: false

  - id: step6
    name: Security and Performance Fixes
    description: Address any security vulnerabilities or performance issues
    actions:
      - description: Review security-related findings from parsed QA results
        elicit: false
      - description: Implement security fixes following QA recommendations
        elicit: false
      - description: Review performance-related findings
        elicit: false
      - description: Apply performance optimizations as recommended
        elicit: false
      - description: Mark security/performance fixes as completed in tracker
        elicit: false

  - id: step7
    name: Run Validation Suite
    description: Ensure all changes pass validation and tests
    actions:
      - description: Run linting to ensure code style compliance
        elicit: false
      - description: Execute all unit tests to verify functionality
        elicit: false
      - description: Run integration tests to ensure system integrity
        elicit: false
      - description: Verify no regressions introduced by fixes
        elicit: false

  - id: step8
    name: Generate Fix Report
    description: Create comprehensive report of all fixes applied
    actions:
      - description: Generate fix report using QAFixTracker.generateFixReport()
        elicit: false
      - description: Display completion summary with statistics
        elicit: false
      - description: Save final fix report to .ai/qa_fix_report.json
        elicit: false
      - description: Verify ALL issues (critical, major, minor, and checklist items) have been addressed
        elicit: false

  - id: step9
    name: Update Story Documentation
    description: Document all changes made in response to QA feedback
    actions:
      - description: Update the Completion Notes with QA fix summary from report
        elicit: false
      - description: Check off completed items in the Tasks/Subtasks section
        elicit: false
      - description: Update the File List with any new or modified files
        elicit: false
      - description: Add comprehensive entry to Change Log with fix report summary
        elicit: false

  - id: step10
    name: Mark Story Ready for Re-Review
    description: Update story status to indicate QA feedback has been addressed
    actions:
      - description: Update story status to "Ready for Review"
        elicit: false
      - description: Add note with fix completion statistics from report
        elicit: false
      - description: Log completion using track-progress.js with fix summary
        elicit: false
      - description: Save final state of QA fix tracking
        elicit: false

inputs: {}
outputs: {}
notes: |
  - This task uses structured tracking to ensure no QA feedback is missed
  - QAFindingsParser extracts structured data from QA Results section
  - QAFixTracker extends TaskTracker for QA-specific tracking and reporting
  - All fixes are tracked in .ai/qa_fixes_checklist.json
  - Final report provides comprehensive summary of all fixes applied
  - ALL issues (critical, major, minor, and checklist items) must be fixed before marking story as ready
  - The tracker provides verification that all items have been addressed
  - Concurrency: Execute independent fixes concurrently with a safe cap (suggested maxParallel=3) to speed up resolution while maintaining isolation for dependent changes

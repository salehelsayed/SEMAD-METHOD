id: address-qa-feedback
name: address-qa-feedback
purpose: Address QA feedback by implementing recommended changes and fixes from the QA review report
steps:
  - id: load-memory
    name: Load Memory and Initialize Context
    description: Load agent working memory and relevant long-term context using unified memory system
    actions:
      - description: Load agent working memory and relevant long-term context
        elicit: false
        function: loadMemoryForTask
        parameters:
          agentName: dev
          context:
            taskId: address-qa-feedback
            taskType: general
        metadata:
          memoryAction: true
          executionOrder: first
      - description: Apply memory context to task execution planning
        elicit: true
        metadata:
          memoryAction: true
          executionOrder: after-load
  - id: step0
    name: Initialize Memory and Context
    description: Initialize working memory for addressing QA feedback
    actions:
      - description: Execute task `update-working-memory` with agentName='dev' and taskId='address-qa-feedback'
        elicit: true
      - description: Execute task `retrieve-context` with query='QA feedback implementation patterns' to load relevant memories
        elicit: true
  - id: step1
    name: Load and Analyze QA Report
    description: Read the QA Results section from the story file to understand all feedback
    actions:
      - description: Read the story file and locate the QA Results section
        elicit: false
      - description: Extract all recommendations, issues, and improvement items from the QA report
        elicit: false
      - description: Prioritize items based on severity (critical, major, minor)
        elicit: false
      - description: Create an implementation plan for addressing each item
        elicit: false
  - id: step2
    name: Address Critical Issues
    description: Fix all critical issues identified by QA
    actions:
      - description: For each critical issue, read the affected file
        elicit: false
      - description: Implement the recommended fix following QA's specific guidance
        elicit: false
      - description: Ensure the fix doesn't break existing functionality
        elicit: false
      - description: Update the story's Debug Log with details of each fix
        elicit: false
  - id: step3
    name: Implement Refactoring Recommendations
    description: Apply code quality improvements suggested by QA
    actions:
      - description: Review each refactoring recommendation in the QA report
        elicit: false
      - description: Apply refactoring changes to improve code quality
        elicit: false
      - description: Ensure refactored code maintains the same functionality
        elicit: false
      - description: Document refactoring changes in the story's Change Log
        elicit: false
  - id: step4
    name: Add Missing Tests
    description: Implement any missing tests identified by QA
    actions:
      - description: Review the Improvements Checklist for missing test items
        elicit: false
      - description: Write unit tests for uncovered functionality
        elicit: false
      - description: Add integration tests for edge cases mentioned by QA
        elicit: false
      - description: Verify all new tests pass successfully
        elicit: true
  - id: step5
    name: Security and Performance Fixes
    description: Address any security vulnerabilities or performance issues
    actions:
      - description: Review Security Review section for vulnerabilities
        elicit: false
      - description: Implement security fixes following QA recommendations
        elicit: false
      - description: Review Performance Considerations section
        elicit: false
      - description: Apply performance optimizations as recommended
        elicit: false
  - id: step6
    name: Run Validation Suite
    description: Ensure all changes pass validation and tests
    actions:
      - description: Run linting to ensure code style compliance
        elicit: false
      - description: Execute all unit tests to verify functionality
        elicit: true
      - description: Run integration tests to ensure system integrity
        elicit: false
      - description: Execute any project-specific validation scripts
        elicit: false
  - id: step7
    name: Update Story Documentation
    description: Document all changes made in response to QA feedback
    actions:
      - description: Update the Completion Notes with a summary of QA fixes applied
        elicit: false
      - description: Check off completed items in the Tasks/Subtasks section
        elicit: true
      - description: Update the File List with any new or modified files
        elicit: false
      - description: Add an entry to the Change Log documenting QA feedback addressed
        elicit: false
  - id: step8
    name: Mark Story Ready for Re-Review
    description: Update story status to indicate QA feedback has been addressed
    actions:
      - description: Update story status to "Ready for Review"
        elicit: false
      - description: Add a note indicating "QA feedback addressed - ready for re-review"
        elicit: false
      - description: Record the completion of QA feedback addressing in working memory
        elicit: false
  - id: save-memory
    name: Save Task Results and Clean Memory
    description: Save task completion and findings to memory with hygiene cleanup
    actions:
      - description: Save task completion and findings to working memory
        elicit: true
        function: saveAndCleanMemory
        parameters:
          agentName: dev
          taskData:
            observation: Completed address-qa-feedback task successfully
            significantFinding: '{{TASK_SIGNIFICANT_FINDING}}'
            taskCompleted: true
            taskId: address-qa-feedback
            context:
              taskType: general
        metadata:
          memoryAction: true
          executionOrder: last
inputs: {}
outputs: {}
notes: |
  - This task is triggered when QA sets story status to "Needs Fixes"
  - All QA recommendations should be treated as advisory - implement based on technical merit
  - Focus on addressing all items marked as critical or blocking first
  - Ensure all changes maintain backward compatibility unless explicitly approved
  - Document rationale if any QA recommendation is not implemented

id: qa-save-memory
name: QA Agent Save Memory
purpose: Saves review findings, quality patterns, and feedback strategies to long-term memory for future reference and continuous improvement
steps:
  - id: step1
    name: Load Memory Utils
    description: Load the memory management utilities for working and long-term memory operations
    actions:
      - description: Log memory task initialization
        elicit: false
        function: logTaskMemory
        parameters:
          agentName: "qa"
          taskName: "qa-save-memory"
          operation: "task_start"
          taskData:
            reviewId: "{{review_id}}"
            storyId: "{{story_id}}"
        metadata:
          loggingAction: true
      - description: Load the memory management utilities (always use AndExit versions when running in subprocess)
        elicit: false

  - id: step2
    name: Update Working Memory
    description: Update working memory with current review completion and quality findings
    actions:
      - description: Log working memory update start
        elicit: false
        function: logWorkingMemory
        parameters:
          agentName: "qa"
          operation: "update_start"
          memoryType: "recentReviews"
          data:
            reviewId: "{{review_id}}"
            storyId: "{{story_id}}"
        metadata:
          loggingAction: true
      - description: Update working memory with current review details including findings, recommendations, and quality patterns
        elicit: false
        function: updateWorkingMemoryAndExit
        parameters:
          agentName: "qa"
          memoryType: "recentReviews"
          data:
            reviewId: "{{review_id}}"
            storyId: "{{story_id}}"
            reviewType: "{{review_details.type}}"
            findings: "{{review_details.findings}}"
            recommendations: "{{review_details.recommendations}}"
            qualityScore: "{{review_details.qualityScore}}"
            timestamp: "{{current_timestamp}}"
            status: "{{review_details.status}}"
        metadata:
          memoryAction: true
      - description: Add review to completed reviews list in working memory
        elicit: false
        function: updateWorkingMemoryAndExit
        parameters:
          agentName: "qa"
          memoryType: "completedReviews"
          data: "{{review_id}}"
        metadata:
          memoryAction: true

  - id: step3
    name: Save Quality Patterns to Long-Term Memory
    description: Save important quality patterns and recurring issues to long-term memory for pattern recognition
    actions:
      - description: Log long-term memory save start for quality patterns
        elicit: false
        function: logLongTermMemory
        parameters:
          agentName: "qa"
          operation: "save_start"
          memoryContent:
            memoryType: "quality-pattern"
            storyId: "{{story_id}}"
            reviewId: "{{review_id}}"
        metadata:
          loggingAction: true
      - description: Save quality patterns and recurring issues to long-term memory
        elicit: false
        function: saveToLongTermMemoryAndExit
        parameters:
          agentName: "qa"
          memoryContent:
            memoryType: "quality-pattern"
            content:
              storyId: "{{story_id}}"
              reviewId: "{{review_id}}"
              pattern: "{{review_details.pattern}}"
              description: "{{review_details.description}}"
              issuesFound: "{{review_details.issues}}"
              recommendations: "{{review_details.recommendations}}"
              codeFiles: "{{review_details.files}}"
              severity: "{{review_details.severity}}"
              category: "{{review_details.category}}"
              resolution: "{{review_details.resolution}}"
            metadata:
              timestamp: "{{current_timestamp}}"
              importance: "{{review_details.importance}}"
              tags: "{{review_details.tags}}"
        metadata:
          memoryAction: true

  - id: step4
    name: Save Feedback Strategies
    description: Save effective feedback strategies and communication patterns for future reviews
    actions:
      - description: Log long-term memory save start for feedback strategies
        elicit: false
        function: logLongTermMemory
        parameters:
          agentName: "qa"
          operation: "save_start"
          memoryContent:
            memoryType: "feedback-strategy"
            storyId: "{{story_id}}"
        metadata:
          loggingAction: true
        condition: "{{review_details.strategy}} !== undefined"
      - description: Save feedback strategies that proved effective for developer communication
        elicit: false
        function: saveToLongTermMemoryAndExit
        parameters:
          agentName: "qa"
          memoryContent:
            memoryType: "feedback-strategy"
            content:
              storyId: "{{story_id}}"
              strategy: "{{review_details.strategy}}"
              effectiveness: "{{review_details.effectiveness}}"
              devResponse: "{{review_details.devResponse}}"
              communicationStyle: "{{review_details.communicationStyle}}"
              issueTypes: "{{review_details.issueTypes}}"
              resolutionTime: "{{review_details.resolutionTime}}"
            metadata:
              timestamp: "{{current_timestamp}}"
              importance: "medium"
              tags: ["feedback-strategy", "{{story_id}}"]
        condition: "{{review_details.strategy}} !== undefined"
        metadata:
          memoryAction: true

  - id: step5
    name: Handle Review Series Completion
    description: Save comprehensive review series summary when multiple review cycles are complete
    actions:
      - description: Save review series completion summary with all iterations, issues found, and quality improvements
        elicit: false
        function: saveToLongTermMemoryAndExit
        parameters:
          agentName: "qa"
          memoryContent:
            memoryType: "review-series-completion"
            content:
              storyId: "{{story_id}}"
              totalReviews: "{{review_details.totalReviews}}"
              initialIssues: "{{review_details.initialIssues}}"
              resolvedIssues: "{{review_details.resolvedIssues}}"
              finalQualityScore: "{{review_details.finalQualityScore}}"
              devCollaboration: "{{review_details.collaboration}}"
              lessonsLearned: "{{review_details.lessons}}"
              bestPractices: "{{review_details.bestPractices}}"
            metadata:
              timestamp: "{{current_timestamp}}"
              importance: "high"
              tags: ["review-complete", "{{story_id}}"]
        condition: "{{review_details.finalReview}} === true"
        metadata:
          memoryAction: true

  - id: step6
    name: Log Task Completion
    description: Log the completion of the memory save task
    actions:
      - description: Log successful completion of QA memory save task
        elicit: false
        function: logTaskMemory
        parameters:
          agentName: "qa"
          taskName: "qa-save-memory"
          operation: "task_complete"
          taskData:
            reviewId: "{{review_id}}"
            storyId: "{{story_id}}"
            success: true
        metadata:
          loggingAction: true

inputs:
  story_id:
    type: string
    required: true
    description: The story being reviewed
  review_id:
    type: string
    required: true
    description: Unique identifier for this review session
  review_details:
    type: object
    required: true
    description: Details about the review including findings, recommendations, patterns, and quality metrics
outputs:
  memory_saved:
    type: boolean
    description: Whether memory was successfully saved
  memory_id:
    type: string
    description: ID of the saved memory entry
metadata:
  canBeUsedBy: ["qa"]
  requiresConfiguration: ["memory"]
  category: memory
  complexity: low
  version: "1.0"
  tags:
    - memory
    - persistence
    - qa-agent
notes: |
  This task ensures the QA agent preserves review knowledge and quality patterns
  for future reference and continuous improvement. Call this after each review
  completion and especially when marking story as "Done" or "Needs Fixes".
  
  Best practices:
  - Save memory after each review iteration
  - Include specific findings and rationale
  - Capture both successful patterns and areas for improvement
  - Tag memories appropriately for future retrieval
  - Document effective feedback strategies for future use
  
  Error handling:
  - If memory save fails, log error but continue
  - Ensure working memory is always updated even if long-term save fails
id: create-next-story
name: Create Next Story Task
purpose: >-
  To identify the next logical story based on project progress and epic definitions, and then to prepare a
  comprehensive, self-contained, and actionable story file using the `Story Template`. This task ensures the story is
  enriched with all necessary technical context, requirements, and acceptance criteria, making it ready for efficient
  implementation by a Developer Agent with minimal need for additional research or finding its own context.
steps:
  - id: step0
    name: Initialize Working Memory
    description: "Initialize working memory for the current agent session"
    actions:
      - description: Execute task `update-working-memory` with agentName='sm' and taskId='create-next-story'
        elicit: false
        metadata:
          originalIndent: 0
      - description: Execute task `retrieve-context` with query='previous story creation context' to load relevant memories
        elicit: false
        metadata:
          originalIndent: 0
      - description: Apply dynamic plan adaptation to break complex tasks into sub-tasks if needed
        elicit: false
        metadata:
          originalIndent: 0
  - id: step1
    name: Load Core Configuration and Check Workflow
    description: ""
    actions:
      - description: Load `{root}/core-config.yaml` from the project root
        elicit: false
        metadata:
          originalIndent: 0
      - description: >-
          If the file does not exist, HALT and inform the user: "core-config.yaml not found. This file is required for
          story creation. You can either: 1) Copy it from GITHUB bmad-core/core-config.yaml and configure it for your
          project OR 2) Run the BMad installer against your project to upgrade and add the file automatically. Please
          add and configure core-config.yaml before proceeding."
        elicit: false
        metadata:
          originalIndent: 0
      - description: "Extract key configurations: `devStoryLocation`, `prd.*`, `architecture.*`, `workflow.*`"
        elicit: false
        metadata:
          originalIndent: 0
    metadata:
      level: 3
      originalNumber: "0"
  - id: step2
    name: Identify Next Story for Preparation
    description: ""
    actions: []
    metadata:
      level: 3
      originalNumber: "1"
  - id: step3
    name: Locate Epic Files and Review Existing Stories
    description: ""
    actions:
      - description: Based on `prdSharded` from config, locate epic files (sharded location/pattern or monolithic PRD sections)
        elicit: false
        metadata:
          originalIndent: 0
      - description: If `devStoryLocation` has story files, load the highest `{epicNum}.{storyNum}.story.md` file
        elicit: false
        metadata:
          originalIndent: 0
      - description: "**If highest story exists:**"
        elicit: false
        metadata:
          originalIndent: 0
      - description: >-
          Verify status is 'Done'. If not, alert user: "ALERT: Found incomplete story! File:
          {lastEpicNum}.{lastStoryNum}.story.md Status: [current status] You should fix this story first, but would you
          like to accept risk & override to create the next story in draft?"
        elicit: true
        metadata:
          originalIndent: 2
      - description: If proceeding, select next sequential story in the current epic
        elicit: true
        metadata:
          originalIndent: 2
      - description: >-
          If epic is complete, prompt user: "Epic {epicNum} Complete: All stories in Epic {epicNum} have been completed.
          Would you like to: 1) Begin Epic {epicNum + 1} with story 1 2) Select a specific story to work on 3) Cancel
          story creation"
        elicit: true
        metadata:
          originalIndent: 2
      - description: "**CRITICAL**: NEVER automatically skip to another epic. User MUST explicitly instruct which story to create."
        elicit: false
        metadata:
          originalIndent: 2
      - description: "**If no story files exist:** The next story is ALWAYS 1.1 (first story of first epic)"
        elicit: false
        metadata:
          originalIndent: 0
      - description: >-
          Announce the identified story to the user: "Identified next story for preparation: {epicNum}.{storyNum} -
          {Story Title}"
        elicit: false
        metadata:
          originalIndent: 0
      - description: Execute task `update-working-memory` with currentStep='story-identified' and context containing epicNum, storyNum, and story title
        elicit: false
        metadata:
          originalIndent: 0
    notes: "- **CRITICAL**: NEVER automatically skip to another epic. User MUST explicitly instruct which story to create."
    metadata:
      level: 4
      originalNumber: "1.1"
  - id: step4
    name: Gather Story Requirements and Previous Story Context
    description: ""
    actions:
      - description: Extract story requirements from the identified epic file
        elicit: false
        metadata:
          originalIndent: 0
      - description: "If previous story exists, review Dev Agent Record sections for:"
        elicit: false
        metadata:
          originalIndent: 0
      - description: Completion Notes and Debug Log References
        elicit: false
        metadata:
          originalIndent: 2
      - description: Implementation deviations and technical decisions
        elicit: false
        metadata:
          originalIndent: 2
      - description: Challenges encountered and lessons learned
        elicit: false
        metadata:
          originalIndent: 2
      - description: Extract relevant insights that inform the current story's preparation
        elicit: false
        metadata:
          originalIndent: 0
    metadata:
      level: 3
      originalNumber: "2"
  - id: step5
    name: Gather Architecture Context
    description: ""
    actions: []
    metadata:
      level: 3
      originalNumber: "3"
  - id: step6
    name: Determine Architecture Reading Strategy
    description: ""
    actions:
      - description: >-
          **If `architectureVersion: >= v4` and `architectureSharded: true`**: Read
          `{architectureShardedLocation}/index.md` then follow structured reading order below
        elicit: false
        metadata:
          originalIndent: 0
      - description: "**Else**: Use monolithic `architectureFile` for similar sections"
        elicit: false
        metadata:
          originalIndent: 0
    metadata:
      level: 4
      originalNumber: "3.1"
  - id: step7
    name: Read Architecture Documents Based on Story Type
    description: >-
      **For ALL Stories:** tech-stack.md, unified-project-structure.md, coding-standards.md, testing-strategy.md

      **For Backend/API Stories, additionally:** data-models.md, database-schema.md, backend-architecture.md,
      rest-api-spec.md, external-apis.md

      **For Frontend/UI Stories, additionally:** frontend-architecture.md, components.md, core-workflows.md,
      data-models.md

      **For Full-Stack Stories:** Read both Backend and Frontend sections above
    actions: []
    metadata:
      level: 4
      originalNumber: "3.2"
  - id: step8
    name: Extract Story-Specific Technical Details
    description: >-
      Extract ONLY information directly relevant to implementing the current story. Do NOT invent new libraries,
      patterns, or standards not in the source documents.

      Extract:

      ALWAYS cite source documents: `[Source: architecture/{filename}.md#{section}]`
    actions:
      - description: Specific data models, schemas, or structures the story will use
        elicit: false
        metadata:
          originalIndent: 0
      - description: API endpoints the story must implement or consume
        elicit: false
        metadata:
          originalIndent: 0
      - description: Component specifications for UI elements in the story
        elicit: false
        metadata:
          originalIndent: 0
      - description: File paths and naming conventions for new code
        elicit: false
        metadata:
          originalIndent: 0
      - description: Testing requirements specific to the story's features
        elicit: false
        metadata:
          originalIndent: 0
      - description: Security or performance considerations affecting the story
        elicit: false
        metadata:
          originalIndent: 0
    metadata:
      level: 4
      originalNumber: "3.3"
  - id: parse-story
    name: Parse Story Requirements into StoryContract
    description: "From the sharded PRD and architecture docs, extract endpoints, data models, file paths and acceptance criteria and construct a StoryContract YAML block."
    actions:
      - description: Extract all API endpoints from architecture documents with their method, path, description, request body, and success response
        elicit: false
        metadata:
          originalIndent: 0
      - description: Identify all files that need to be created or modified based on the story requirements
        elicit: false
        metadata:
          originalIndent: 0
      - description: Link acceptance criteria from the epic to this story
        elicit: false
        metadata:
          originalIndent: 0
      - description: Build StoryContract YAML block with version, story_id, epic_id, apiEndpoints, filesToModify, and acceptanceCriteriaLinks
        elicit: false
        metadata:
          originalIndent: 0
      - description: CRITICAL - Do NOT summarise or invent data. Extract requirements verbatim from PRD and Architecture documents
        elicit: false
        metadata:
          originalIndent: 0
    output: storyContract
    schema: storyContractSchema
    metadata:
      level: 3
      originalNumber: "4"
  - id: step9
    name: Verify Project Structure Alignment
    description: ""
    actions:
      - description: >-
          Cross-reference story requirements with Project Structure Guide from
          `docs/architecture/unified-project-structure.md`
        elicit: false
        metadata:
          originalIndent: 0
      - description: Ensure file paths, component locations, or module names align with defined structures
        elicit: false
        metadata:
          originalIndent: 0
      - description: Document any structural conflicts in "Project Structure Notes" section within the story draft
        elicit: false
        metadata:
          originalIndent: 0
    metadata:
      level: 3
      originalNumber: "4"
  - id: step10
    name: Populate Story Template with Full Context
    description: ""
    actions:
      - description: "Create new story file: `{devStoryLocation}/{epicNum}.{storyNum}.story.md` using Story Template"
        elicit: false
        metadata:
          originalIndent: 0
      - description: "Embed the StoryContract YAML block at the top of the story file between --- markers"
        elicit: false
        metadata:
          originalIndent: 0
      - description: "Execute task `validate-story-contract` with storyFilePath set to the newly created story file path"
        elicit: false
        metadata:
          originalIndent: 0
      - description: "If validation fails, halt the workflow and inform the user of the specific validation errors so corrections can be made"
        elicit: false
        metadata:
          originalIndent: 0
      - description: "Fill in basic story information: Title, Status (Draft), Story statement, Acceptance Criteria from Epic"
        elicit: false
        metadata:
          originalIndent: 0
      - description: "**`Dev Notes` section (CRITICAL):**"
        elicit: false
        metadata:
          originalIndent: 0
      - description: >-
          CRITICAL: This section MUST contain ONLY information extracted from architecture documents. NEVER invent or
          assume technical details.
        elicit: false
        metadata:
          originalIndent: 2
      - description: "Include ALL relevant technical details from Steps 2-3, organized by category:"
        elicit: false
        metadata:
          originalIndent: 2
      - description: "**Previous Story Insights**: Key learnings from previous story"
        elicit: false
        metadata:
          originalIndent: 4
      - description: "**Data Models**: Specific schemas, validation rules, relationships [with source references]"
        elicit: false
        metadata:
          originalIndent: 4
      - description: "**API Specifications**: Endpoint details, request/response formats, auth requirements [with source references]"
        elicit: false
        metadata:
          originalIndent: 4
      - description: "**Component Specifications**: UI component details, props, state management [with source references]"
        elicit: false
        metadata:
          originalIndent: 4
      - description: "**File Locations**: Exact paths where new code should be created based on project structure"
        elicit: false
        metadata:
          originalIndent: 4
      - description: "**Testing Requirements**: Specific test cases or strategies from testing-strategy.md"
        elicit: false
        metadata:
          originalIndent: 4
      - description: "**Technical Constraints**: Version requirements, performance considerations, security rules"
        elicit: false
        metadata:
          originalIndent: 4
      - description: "Every technical detail MUST include its source reference: `[Source: architecture/{filename}.md#{section}]`"
        elicit: false
        metadata:
          originalIndent: 2
      - description: >-
          If information for a category is not found in the architecture docs, explicitly state: "No specific guidance
          found in architecture docs"
        elicit: false
        metadata:
          originalIndent: 2
      - description: "**`Tasks / Subtasks` section:**"
        elicit: true
        metadata:
          originalIndent: 0
      - description: >-
          Generate detailed, sequential list of technical tasks based ONLY on: Epic Requirements, Story AC, Reviewed
          Architecture Information
        elicit: true
        metadata:
          originalIndent: 2
      - description: Each task must reference relevant architecture documentation
        elicit: true
        metadata:
          originalIndent: 2
      - description: Include unit testing as explicit subtasks based on the Testing Strategy
        elicit: true
        metadata:
          originalIndent: 2
      - description: "Link tasks to acceptance criteria from the contract (e.g., `Task 1 (AC-1, AC-3)`) so developers know exactly what to implement"
        elicit: true
        metadata:
          originalIndent: 2
      - description: Add notes on project structure alignment or discrepancies found in Step 4
        elicit: false
        metadata:
          originalIndent: 0
    notes: |-
      - **`Dev Notes` section (CRITICAL):**
        - CRITICAL: This section MUST contain ONLY information extracted from architecture documents. NEVER invent or assume technical details.
    metadata:
      level: 3
      originalNumber: "5"
  - id: step11
    name: Story Draft Completion and Review
    description: ""
    actions:
      - description: Review all sections for completeness and accuracy
        elicit: false
        metadata:
          originalIndent: 0
      - description: Verify all source references are included for technical details
        elicit: true
        metadata:
          originalIndent: 0
      - description: Ensure tasks align with both epic requirements and architecture constraints
        elicit: true
        metadata:
          originalIndent: 0
      - description: Update status to "Draft" and save the story file
        elicit: false
        metadata:
          originalIndent: 0
      - description: Execute `{root}/tasks/execute-checklist` `{root}/checklists/story-draft-checklist`
        elicit: true
        metadata:
          originalIndent: 0
      - description: "Provide summary to user including:"
        elicit: false
        metadata:
          originalIndent: 0
      - description: "Story created: `{devStoryLocation}/{epicNum}.{storyNum}.story.md`"
        elicit: false
        metadata:
          originalIndent: 2
      - description: "Status: Draft"
        elicit: false
        metadata:
          originalIndent: 2
      - description: Key technical components included from architecture docs
        elicit: false
        metadata:
          originalIndent: 2
      - description: Any deviations or conflicts noted between epic and architecture
        elicit: false
        metadata:
          originalIndent: 2
      - description: Checklist Results
        elicit: false
        metadata:
          originalIndent: 2
      - description: >-
          Next steps: For Complex stories, suggest the user carefully review the story draft and also optionally have
          the PO run the task `{root}/tasks/validate-next-story`
        elicit: true
        metadata:
          originalIndent: 2
      - description: Execute task `update-working-memory` to record story completion with plan containing story details and observations about technical context extracted
        elicit: false
        metadata:
          originalIndent: 0
      - description: Store story summary in Qdrant for future retrieval using storeMemorySnippet with story title and key technical elements
        elicit: false
        metadata:
          originalIndent: 0
inputs: {}
outputs: {}
metadata:
  originalSections:
    - Purpose
    - SEQUENTIAL Task Execution (Do not proceed until current Task is complete)
  preservedContent:
    - type: section-header
      content: SEQUENTIAL Task Execution (Do not proceed until current Task is complete)
      level: 2
  executionMode: SEQUENTIAL

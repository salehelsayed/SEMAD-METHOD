markdownExploder: true
prd:
  prdFile: docs/prd.md
  prdVersion: v4
  prdSharded: true
  prdShardedLocation: docs/prd
  epicFilePattern: epic-{n}*.md
architecture:
  architectureFile: docs/architecture.md
  architectureVersion: v4
  architectureSharded: true
  architectureShardedLocation: docs/architecture
customTechnicalDocuments: null
devLoadAlwaysFiles:
  - docs/architecture/coding-standards.md
  - docs/architecture/tech-stack.md
  - docs/architecture/source-tree.md
devDebugLog: .ai/debug-log.md
devStoryLocation: docs/stories
devStartup: idle           # idle | story
devAllowAdhoc: true        # enable *adhoc one-off tasks
slashPrefix: BMad
structuredTasks: true
searchTools:
  toolMappingsFile: "bmad-core/data/tool-mappings.yaml"
  defaultOutputFile: "search-tools.yaml"
validationSchemas:
  storyContractSchema: "schemas/story-contract-schema.json"
  architectureSchema: "schemas/architecture-schema.json"
  prdSchema: "schemas/prd-schema.json"
  checklistSchema: "schemas/checklist-schema.json"
  taskSchema: "schemas/task-schema.json"
  structuredTaskSchema: "schemas/structured-task-schema.json"
  workflowConfigSchema: "schemas/workflow-config-schema.json"
memory:
  enabled: true
  baseDirectory: ".ai"
  debug:
    enabled: false
    logLevel: "info"
    logFile: ".ai/memory-debug.log"
  retentionPolicies:
    workingMemory:
      maxAgeDays: 7
      maxObservations: 100
      maxDecisions: 50
      maxKeyFacts: 200
      maxBlockers: 25
      autoCleanup: true
    longTermMemory:
      maxAgeDays: 90
      autoArchive: true
      summarizationThreshold: 1000
      compressionEnabled: true
    archiveMemory:
      maxAgeDays: 365
      autoDelete: false
  hygiene:
    enableAutoSummarization: true
    enableAutoCleanup: true
    summarizationInterval: "daily"
    cleanupSchedule: "0 2 * * *"
    maxMemorySize: "100MB"
    workingMemoryLimits:
      maxObservations: 100
      maxDecisions: 50
      maxKeyFacts: 200
      maxBlockers: 25
      maxAgeHours: 168  # 7 days
    cleanupTriggers:
      runAfterEachAction: true
      runOnMemoryThreshold: 0.8  # Cleanup when 80% of limits reached
      runOnAgeThreshold: true
    archivalRules:
      summarizeBeforeDelete: true
      retainCriticalFacts: true
      preserveActiveBlockers: true
      minimumEntriesBeforeCleanup: 10
  tagging:
    includeStoryId: true
    includeEpicId: true
    includeAgentRole: true
    includeTimestamp: true
    customTags: []
  qdrant:
    enabled: true
    host: "localhost"
    port: 6333
    collection: "bmad_agent_memory"
    vectorSize: 384
    healthCheckInterval: 30000
  delays:
    memoryLockTimeout: 5000
    batchTaskDelay: 500
    retryDelay: 1000
codeQuality:
  enabled: true
  metrics:
    maxFileLines: 500
    maxFunctionLines: 50
    maxCyclomaticComplexity: 10
    maxClassLines: 300
    maxNestingDepth: 4
    duplicateCodeThreshold: 30
    commentDensityMin: 0.1  # Minimum 10% comments
    commentDensityMax: 0.4  # Maximum 40% comments
  autoRefactor:
    enabled: true
    autoApply: false  # Generate recommendations but don't auto-apply
    generateExamples: true
    prioritizeByImpact: true
  qualityGates:
    blockOnCritical: false  # Don't block commits on quality issues
    warnOnMajor: true
    reportMinor: true
  reporting:
    outputDirectory: ".ai/quality-reports"
    retainReports: 30  # Keep 30 most recent reports
    includeMetrics: true
    generateCharts: false
  excludePatterns:
    - "**/*.test.js"
    - "**/*.test.ts"
    - "**/*.spec.js"
    - "**/*.spec.ts"
    - "**/node_modules/**"
    - "**/dist/**"
    - "**/build/**"
    - "**/*.md"
    - "**/*.json"
    - "**/*.yaml"
    - "**/*.yml"
